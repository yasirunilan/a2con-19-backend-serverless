service: a2con-registration # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10 # set node.js runtime
  memorySize: 128 # set the maximum memory of the Lambdas in Megabytes
  timeout: 30 # the timeout is 10 seconds (default is 6 seconds)
  stage: dev # setting the env stage to dev, this will be visible in the routes
  region: us-east-1
  iamRoleStatements:
  - Effect: "Allow"
    Resource: "*"
    Action:
    - "ses:*"
  - Effect: Allow
    Action:
    - "s3:*"
    Resource: "arn:aws:s3:::a2-con-qrcodes/*"

functions: # add 4 functions for CRUD
  create:
    handler: handler.create # point to exported create function in handler.js
    events:
    - http:
        path: users # path will be domain.name.com/dev/users
        method: post
        cors:
          origins:
          - http://a2-con-registration-frontend.s3-website-us-east-1.amazonaws.com
          headers:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
          - X-Amz-User-Agent
          allowCredentials: false
  getOne:
    handler: handler.getOne
    events:
    - http:
        path: users/{id} # path will be domain.name.com/dev/users/1
        method: get
        cors: true
#  getAll:
#    handler: handler.getAll # path will be domain.name.com/dev/users
#    events:
#    - http:
#        path: users
#        method: get
#        cors: true
#  update:
#    handler: handler.update # path will be domain.name.com/dev/users/1
#    events:
#    - http:
#        path: users/{id}
#        method: put
#        cors: true
#  delete:
#    handler: handler.delete
#    events:
#    - http:
#        path: users/{id} # path will be domain.name.com/dev/users/1
#        method: delete
#        cors: true

plugins:
- serverless-offline # adding the plugin to be able to run the offline emulation